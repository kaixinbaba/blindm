name: release package

on:
  workflow_dispatch:
  push:
    tags: ["[0-9]+.[0-9]+.[0-9]+*"]

jobs:
  linux:
    name: Build Linux
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up cargo
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all

      - name: Create output directory
        run: mkdir output

      - name: Copy files to output
        run: |
          cp target/release/hgtui output/
          cp README.md output/README.md
          cp LICENSE output/LICENSE

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: linux
          path: output/*

  macos:
    name: Build macOS
    runs-on: macos-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up cargo
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all

      - name: Create output directory
        run: mkdir output

      - name: Copy files to output
        run: |
          cp target/release/hgtui output/
          cp README.md output/README.md
          cp LICENSE output/LICENSE

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: macos
          path: output/*

  windows:
    name: Build Windows
    runs-on: windows-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up cargo
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Add cargo-wix subcommand
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-wix --version 0.3.2

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all

      - name: Create output directory
        run: mkdir output

      - name: Copy files to output
        run: |
          cp target\release\hgtui.exe output\
          cp LICENSE output\
          cp README.md output\README.md

      - name: init wix
        uses: actions-rs/cargo@v1
        with:
          command: wix
          args: init

      - name: Create msi with wix
        uses: actions-rs/cargo@v1
        with:
          command: wix
          args: --no-build --nocapture --output target\wix\hg-tui-windows.msi

      - name: Upload installer
        uses: actions/upload-artifact@v2
        with:
          name: windows-installer
          path: target\wix\hg-tui-windows.msi

      - name: Upload zip
        uses: actions/upload-artifact@v2
        with:
          name: windows-zip
          path: output\*

  release:
    name: Publish Release
    runs-on: ubuntu-latest
    needs:
      - linux
      - macos
      - windows
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Determine Release Info
        id: info
        env:
          GITHUB_REF: ${{ github.ref }}
        run: |
          VERSION=${GITHUB_REF##*/}
          MAJOR=${VERSION%%.*}
          MINOR=${VERSION%.*}
          MINOR=${MINOR#*.}
          PATCH=${VERSION##*.}
          echo "::set-output name=version::${VERSION}"
          echo "::set-output name=linuxdir::hg-tui_${MAJOR}.${MINOR}.${PATCH}_linux"
          echo "::set-output name=macosdir::hg-tui_${MAJOR}.${MINOR}.${PATCH}_macOS"
          echo "::set-output name=windowsdir::hg-tui_${MAJOR}.${MINOR}.${PATCH}_windows"
          echo "::set-output name=innerdir::hg-tui-${VERSION}"

      - name: Create Release Draft
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ steps.info.outputs.version }} Release
          draft: true

      - name: Create Linux Directory
        run: mkdir -p ${{ steps.info.outputs.linuxdir }}/${{ steps.info.outputs.innerdir }}

      - name: Download Linux Artifacts
        uses: actions/download-artifact@v2
        with:
          name: linux
          path: ${{ steps.info.outputs.linuxdir }}/${{ steps.info.outputs.innerdir }}

      - name: Restore Linux File Modes
        run: |
          chmod 755 ${{ steps.info.outputs.linuxdir }}/${{ steps.info.outputs.innerdir }}/hgtui*

      - name: Create Linux tarball
        run: tar -zcvf ${{ steps.info.outputs.linuxdir }}.tar.gz ${{ steps.info.outputs.linuxdir }}

      - name: Upload Linux Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ steps.info.outputs.linuxdir }}.tar.gz
          asset_name: ${{ steps.info.outputs.linuxdir }}.tar.gz
          asset_content_type: application/gzip

      - name: Create macOS Directory
        run: mkdir -p ${{ steps.info.outputs.macosdir }}/${{ steps.info.outputs.innerdir }}

      - name: Download macOS Artifacts
        uses: actions/download-artifact@v2
        with:
          name: macos
          path: ${{ steps.info.outputs.macosdir }}/${{ steps.info.outputs.innerdir }}

      - name: Restore macOS File Modes
        run: chmod 755 ${{ steps.info.outputs.macosdir }}/${{ steps.info.outputs.innerdir }}/hgtui*

      - name: Create macOS Archive
        run: zip -r ${{ steps.info.outputs.macosdir }}.zip ${{ steps.info.outputs.macosdir }}

      - name: Upload macOS Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ steps.info.outputs.macosdir }}.zip
          asset_name: ${{ steps.info.outputs.macosdir }}.zip
          asset_content_type: application/zip

      - name: Create Windows Directory
        run: mkdir -p ${{ steps.info.outputs.windowsdir }}/${{ steps.info.outputs.innerdir }}

      - name: Download Windows zip
        uses: actions/download-artifact@v2
        with:
          name: windows-zip
          path: ${{ steps.info.outputs.windowsdir }}/${{ steps.info.outputs.innerdir }}

      - name: Show Windows Artifacts
        run: ls -la ${{ steps.info.outputs.windowsdir }}/${{ steps.info.outputs.innerdir }}

      - name: Create macOS Archive
        run: zip -r ${{ steps.info.outputs.windowsdir }}.zip ${{ steps.info.outputs.windowsdir }}

      - name: Upload Windows zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ steps.info.outputs.windowsdir }}.zip
          asset_name: ${{ steps.info.outputs.windowsdir }}.zip
          asset_content_type: application/zip

      - name: Download Windows installer
        uses: actions/download-artifact@v2
        with:
          name: windows-installer
          path: ./

      - name: Upload Windows installer
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./hg-tui-windows.msi
          asset_name: ${{ steps.info.outputs.windowsdir }}.msi
          asset_content_type: application/x-msi
      - name: Tagged Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            *.zip
            *.tar.gz
            *.msi
  publish-to-cargo:
    name: Publishing to Cargo
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: publish
          args: --token ${{ secrets.CARGO_REGISTRY_TOKEN }} --allow-dirty

  # bump-homebrew-formula:
  #   name: Bump Homebrew formula
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Extract version
  #       id: extract-version
  #       run: |
  #         printf "::set-output name=%s::%s\n" tag-name "${GITHUB_REF#refs/tags/}"
  #     - uses: mislav/bump-homebrew-formula-action@v2
  #       if: "!contains(github.ref, '-')" # skip prereleases
  #       with:
  #         formula-name: hg-tui
  #         formula-path: Formula/hg-tui.rb
  #         homebrew-tap: kaixinbaba/hg-tui
  #         base-branch: main
  #         # download-url: https://example.com/foo/${{ steps.extract-version.outputs.tag-name }}.tar.gz
  #         # download-url: https://github.com/kaixinbaba/hg-tui/archive/hg-tui_${{ steps.extract-version.outputs.tag-name }}_macOS.zip
  #         commit-message: |
  #           {{formulaName}} {{version}}
  #
  #           Created by https://github.com/mislav/bump-homebrew-formula-action
  #       env:
  #         COMMITTER_TOKEN: ${{ secrets.HOMEBREW_GITHUB_API_TOKEN }}
